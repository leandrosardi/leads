<%

  # map some params who are specific for for the filter
  redirect_on_error = session['redirect_on_error']
  # setup default values
  redirect_on_error = "/leads/results" if redirect_on_error.to_s.size == 0
  redirect_on_success = "/leads/results" if redirect_on_success.to_s.size == 0


  begin
    puts params.inspect
    name = params["search-name"]
    description = params["search-description"]
    total_rows = params["total-rows"]
    position = params["position"]
    industry = params["industry"]
    location = params["location"]

    s = nil
    DB.transaction do
      # sace search
      s = Leads::FlSearch.new({saved: true, id_user: @login.user.id, name: name, description: description,
                               no_of_results: total_rows, no_of_companies: nil})
      s.save

      # save search industry
      search_industry = Leads::FlSearchIndustry.new({id_search: s.id, name: industry, positive: true})
      search_industry.save

      # save search location
      search_location = Leads::FlSearchLocation.new({id_search: s.id, value: location, positive: true})
      search_location.save

      # save search position
      search_position = Leads::FlSearchPosition.new({id_search: s.id, value: position, positive: true})
      search_position.save


      puts industry.inspect
      puts search_location.inspect
      puts search_position.inspect
      # puts s.inspect
    end # transaction
  rescue => e
    # libero recursos
    DB.disconnect
    GC.start
    # return errors
    redirect "#{redirect_on_error}?err="+ CGI::escape(e.message)

  end

  redirect "#{redirect_on_success}?msg=Search+Saved+Successfully"
%>